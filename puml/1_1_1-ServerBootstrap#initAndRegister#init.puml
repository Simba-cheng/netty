@startuml

'箭头上的文字居中
skinparam sequenceMessageAlign center

AbstractBootstrap -> ServerBootstrap: \n init \n 初始化 NioServerSocketChannel

group init内部逻辑

    ServerBootstrap -> AbstractBootstrap: \n ① setChannelOptions
        note right
            ①#
            为 NioServerSocketChannel 配置TCP等参数
            是由 serverBootstrap.option 方法添加的参数
            @see io.netty.bootstrap.AbstractBootstrap.option
        end note
    AbstractBootstrap --> ServerBootstrap

    ServerBootstrap -> AbstractBootstrap: \n ② setAttributes
        note right
            ②#
            为 NioServerSocketChannel 配置自定义属性
            是由 serverBootstrap.attr 方法添加的 自定义属性
            @see io.netty.bootstrap.AbstractBootstrap.attr
        end note
    AbstractBootstrap --> ServerBootstrap

    group #ADD8E6 装配 pipeline 流水线(initChannel) [<color:#FF4500><size:14> 注意: 此处装配的 pipeline 在该 NioServerSocketChannel 注册完成后才会被调用!! </size></color>]
        ServerBootstrap -> ServerBootstrap: \n ③ add handler
            note right
                添加自定义handler
                是由 serverBootstrap.handler 方法配置的
                @see io.netty.bootstrap.AbstractBootstrap.handler
            end note

        group #FFC1C1 Runnable 异步任务
            ServerBootstrap -> ServerBootstrap: \n ④ add ServerBootstrapAcceptor
                note right
                    向 NioServerSocketChannel 所属的 NioEventLoop 提交一个 Runnable 异步任务。
                    Runnable 作用就是在 NioServerSocketChannel 的 pipeline 中添加一个 ServerBootstrapAcceptor 处理器。
                end note
        end
    end
    ServerBootstrap --> AbstractBootstrap: \n
end

@enduml