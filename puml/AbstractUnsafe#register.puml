@startuml participant

Actor -> AbstractUnsafe: 1 register

AbstractUnsafe -> SingleThreadEventExecutor: 2 execute(Runnable task) \n   普通调用栈(传参)
SingleThreadEventExecutor -> SingleThreadEventExecutor: 2.1 execute0(Runnable task) \n      普通调用栈(传参)
SingleThreadEventExecutor -> SingleThreadEventExecutor: \n 2.2 execute(Runnable task, boolean immediate) \n       执行函数
SingleThreadEventExecutor -> SingleThreadEventExecutor: \n 2.2.1 addTask(task) \n          将task添加到内部队列 \n          taskQueue#MpscUnboundedArrayQueue
SingleThreadEventExecutor -> SingleThreadEventExecutor: \n 2.2.2 startThread \n          准备以线程安全启动工作线程





NioEventLoop -> NioEventLoop: \n 1.1 初始化 NioEventLoop 内部任务队列
NioEventLoop -> SingleThreadEventLoop: \n 2 调用父类构造器
SingleThreadEventLoop -> SingleThreadEventExecutor: 3 调用父类构造器
SingleThreadEventExecutor -> xxxParent :4 调用父类构造器
SingleThreadEventExecutor -> SingleThreadEventExecutor : \n 4.1 初始化其他参数

SingleThreadEventLoop <-- SingleThreadEventExecutor
NioEventLoop <-- SingleThreadEventLoop

NioEventLoop -> NioEventLoop : \n 2.1 创建selector
NioEventLoop -> NioEventLoop : \n 2.2 初始化其他相关参数

Actor <-- NioEventLoop
@enduml